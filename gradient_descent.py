# -*- coding: utf-8 -*-
"""Gradient-Descent

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Z2DjHVhYvWQziSVeAlEzZbJf0Lz0NC66
"""

import numpy as np

def gradient_descent(x,y) :
  m_curr=b_curr=0
  n=len(x)
  iterations= 10000
  learning_rate =0.08
  for i in range(iterations):
    y_prediction = b_curr + m_curr*x
    cost = 1/n *sum([val**2 for val in (y-y_prediction) ])
    md = -(2/n)*sum(x*(y-y_prediction))
    bd = -(2/n)*sum(y-y_prediction)
    m_curr = m_curr - learning_rate * md
    b_curr = b_curr - learning_rate * bd
    print('m {}, b{}, cost{},iteration {}'.format (m_curr,b_curr,cost,i))

x=np.array([1,2,3,4,5])
y=np.array([5,7,9,11,13])

gradient_descent(x,y)